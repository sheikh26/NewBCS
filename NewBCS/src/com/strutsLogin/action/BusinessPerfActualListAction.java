/*
 * Generated by Nenosystems Generator Struts
 */

package com.strutsLogin.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.strutsLogin.delegate.BusinessPerfActualServiceDelegate;
import com.strutsLogin.delegate.BusinessPerfPlanServiceDelegate;
import com.strutsLogin.dto.BusinessPerfActualDTO;
import com.strutsLogin.dto.BusinessPerfPlanDTO;
import com.strutsLogin.dto.SearchCriteria;
import com.strutsLogin.form.BaseForm;
import com.strutsLogin.form.BusinessPerfActualForm;
import com.strutsLogin.form.BusinessPerfActualListForm;
import com.strutsLogin.form.BusinessPerfPlanForm;
import com.strutsLogin.form.BusinessPerfPlanListForm;
import com.strutsLogin.util.DataUtil;

public class BusinessPerfActualListAction extends BaseAction {


	@Override
	public ActionForward display(ActionMapping mapping, BaseForm form,
			String operation, HttpServletRequest request,
			HttpServletResponse response) {
		BusinessPerfActualListForm listForm = (BusinessPerfActualListForm) (form);
		
		return mapping.findForward("Success");
	}

	@Override
	public ActionForward submit(ActionMapping mapping, BaseForm form,
			String operation, HttpServletRequest request,
			HttpServletResponse response) {

		BusinessPerfActualDTO dto= null;
	     
	     if("Delete".equals(operation)){
	    	 BusinessPerfActualListForm listForm = (BusinessPerfActualListForm) form;
				dto = (BusinessPerfActualDTO) listForm.getDTO();
				BusinessPerfActualServiceDelegate.delete(dto);
				
				//After Delete
				BusinessPerfActualListForm listForm1 = new BusinessPerfActualListForm();
				List list1 = null;

				SearchCriteria criteria = new SearchCriteria();
				criteria.setOrderBy(listForm1.getOrderBy());
				criteria.setAsc(listForm1.isAsc());

				list1 = BusinessPerfActualServiceDelegate.getList(criteria);

				listForm1.setList(list1);
				 request.setAttribute("list1", list1);
			
		}

	     if("OK".equals(operation)){
		    	// BusinessPerfPlanForm businessUnitMasterForm =(BusinessPerfPlanForm) form;
	    	 BusinessPerfActualListForm listForm = (BusinessPerfActualListForm) form;
					List list1 = null;
					int bunit=DataUtil.getInteger(listForm.getBusinessUnitId());
					System.out.println("Value of Action"+bunit);
					
					int buyear=DataUtil.getInteger(listForm.getBuYear());
					System.out.println("Value of Action"+buyear);
					
					list1 = BusinessPerfActualServiceDelegate.getBunit(bunit,buyear);
					System.out.println("size of list"+list1.size());
					listForm.setList(list1);
					 request.setAttribute("list1", list1);
			 
			return mapping.findForward("Success");
		
			 }
					 //
				
			

		return mapping.findForward("Success");
	}

}
