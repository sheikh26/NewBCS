/*
 * Generated by Vikas Vasnik Generator Struts
 */

package com.strutsLogin.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.strutsLogin.delegate.BusinessPerfActualServiceDelegate;
import com.strutsLogin.delegate.EmployeeMasterServiceDelegate;
import com.strutsLogin.delegate.EmployeePerformanceServiceDelegate;
import com.strutsLogin.dto.EmployeeMasterDTO;
import com.strutsLogin.dto.EmployeePerformanceDTO;
import com.strutsLogin.dto.SearchCriteria;
import com.strutsLogin.form.BaseForm;
import com.strutsLogin.form.BusinessPerfActualListForm;
import com.strutsLogin.form.EmployeeMasterForm;
import com.strutsLogin.form.EmployeeMasterListForm;
import com.strutsLogin.form.EmployeePerfListForm;
import com.strutsLogin.form.EmployeePerformanceForm;
import com.strutsLogin.util.DataUtil;

public class EmployeePerfListAction extends BaseAction {


	@Override
	public ActionForward display(ActionMapping mapping, BaseForm form,
			String operation, HttpServletRequest request,
			HttpServletResponse response) {
		EmployeePerfListForm listForm = (EmployeePerfListForm) (form);
		

		return mapping.findForward("Success");
	}

	@Override
	public ActionForward submit(ActionMapping mapping, BaseForm form,
			String operation, HttpServletRequest request,
			HttpServletResponse response) {

		//     EmployeeMasterListForm listForm = (EmployeeMasterListForm) (form);
		     EmployeePerformanceDTO dto= null;
		     
		     if("Delete".equals(operation)){
		    	 EmployeePerfListForm listForm = (EmployeePerfListForm) form;
					dto = (EmployeePerformanceDTO) listForm.getDTO();
					EmployeePerformanceServiceDelegate.delete(dto);
					
					//After Delete
					EmployeePerfListForm listForm1 = new EmployeePerfListForm();
					List list1 = null;

					SearchCriteria criteria = new SearchCriteria();
					criteria.setOrderBy(listForm1.getOrderBy());
					criteria.setAsc(listForm1.isAsc());

					list1 = EmployeePerformanceServiceDelegate.getList(criteria);

					listForm1.setList(list1);
					 request.setAttribute("list1", list1);
				
			}
		     if("OK".equals(operation)){
			    	// BusinessPerfPlanForm businessUnitMasterForm =(BusinessPerfPlanForm) form;
		    	 EmployeePerfListForm listForm = (EmployeePerfListForm) form;
						List list1 = null;
						int bunit=DataUtil.getInteger(listForm.getBusinessUnitId());
						System.out.println("Value of Action"+bunit);
						
						int buyear=DataUtil.getInteger(listForm.getYear());
						System.out.println("Value of Action"+buyear);
						
						list1 = EmployeePerformanceServiceDelegate.getBunit(bunit,buyear);
						System.out.println("size of list"+list1.size());
						listForm.setList(list1);
						 request.setAttribute("list1", list1);
				 
				return mapping.findForward("Success");
			
				 }
						 //
					
				

			return mapping.findForward("Success");
		}

}
